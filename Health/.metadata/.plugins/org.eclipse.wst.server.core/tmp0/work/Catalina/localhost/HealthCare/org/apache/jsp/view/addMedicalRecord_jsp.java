/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/11.0.0-M22
 * Generated at: 2025-04-19 06:39:25 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.view;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;

public final class addMedicalRecord_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/lib/jakarta.servlet.jsp.jstl-2.0.0.jar", Long.valueOf(1744694913000L));
    _jspx_dependants.put("jar:file:/Users/dipaktolangi/Desktop/Coursework%202/Health/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/HealthCare/WEB-INF/lib/jakarta.servlet.jsp.jstl-2.0.0.jar!/META-INF/c.tld", Long.valueOf(1602853272000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("    <meta charset=\"UTF-8\">\n");
      out.write("    <title>Add Medical Record</title>\n");
      out.write("    <style>\n");
      out.write("        :root {\n");
      out.write("            --primary-color: #6c5ce7;\n");
      out.write("            --secondary-color: #a29bfe;\n");
      out.write("            --accent-color: #fd79a8;\n");
      out.write("            --success-color: #00b894;\n");
      out.write("            --warning-color: #fdcb6e;\n");
      out.write("            --danger-color: #d63031;\n");
      out.write("            --info-color: #0984e3;\n");
      out.write("            --dark-color: #2d3436;\n");
      out.write("            --darker-color: #1e272e;\n");
      out.write("            --light-color: #f5f6fa;\n");
      out.write("            --text-color: #dfe6e9;\n");
      out.write("            --card-bg: #16213e;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        * {\n");
      out.write("            margin: 0;\n");
      out.write("            padding: 0;\n");
      out.write("            box-sizing: border-box;\n");
      out.write("            font-family: 'Poppins', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        body {\n");
      out.write("            background-color: var(--darker-color);\n");
      out.write("            color: var(--text-color);\n");
      out.write("            line-height: 1.6;\n");
      out.write("            padding: 20px;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .record-form {\n");
      out.write("            max-width: 800px;\n");
      out.write("            margin: 0 auto;\n");
      out.write("            background-color: var(--card-bg);\n");
      out.write("            border-radius: 12px;\n");
      out.write("            padding: 2rem;\n");
      out.write("            box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);\n");
      out.write("            border: 1px solid rgba(255, 255, 255, 0.05);\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .form-title {\n");
      out.write("            font-size: 1.5rem;\n");
      out.write("            color: var(--secondary-color);\n");
      out.write("            margin-bottom: 1.5rem;\n");
      out.write("            padding-bottom: 1rem;\n");
      out.write("            border-bottom: 1px solid rgba(255, 255, 255, 0.1);\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .form-group {\n");
      out.write("            margin-bottom: 1.5rem;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .form-group label {\n");
      out.write("            display: block;\n");
      out.write("            margin-bottom: 0.5rem;\n");
      out.write("            font-weight: 500;\n");
      out.write("            color: var(--secondary-color);\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .form-group textarea {\n");
      out.write("            width: 100%;\n");
      out.write("            padding: 1rem;\n");
      out.write("            background-color: rgba(0, 0, 0, 0.2);\n");
      out.write("            border: 1px solid rgba(255, 255, 255, 0.1);\n");
      out.write("            border-radius: 6px;\n");
      out.write("            color: var(--text-color);\n");
      out.write("            min-height: 150px;\n");
      out.write("            resize: vertical;\n");
      out.write("            transition: border 0.3s ease;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .form-group textarea:focus {\n");
      out.write("            outline: none;\n");
      out.write("            border-color: var(--primary-color);\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .btn-group {\n");
      out.write("            display: flex;\n");
      out.write("            gap: 1rem;\n");
      out.write("            margin-top: 2rem;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .btn {\n");
      out.write("            padding: 0.75rem 1.5rem;\n");
      out.write("            border: none;\n");
      out.write("            border-radius: 6px;\n");
      out.write("            cursor: pointer;\n");
      out.write("            font-weight: 500;\n");
      out.write("            transition: all 0.3s ease;\n");
      out.write("            display: inline-flex;\n");
      out.write("            align-items: center;\n");
      out.write("            justify-content: center;\n");
      out.write("            gap: 0.5rem;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .btn:hover {\n");
      out.write("            transform: translateY(-2px);\n");
      out.write("            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .btn-primary {\n");
      out.write("            background-color: var(--primary-color);\n");
      out.write("            color: white;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .btn-primary:hover {\n");
      out.write("            background-color: #5a4bd4;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .btn-secondary {\n");
      out.write("            background-color: var(--dark-color);\n");
      out.write("            color: var(--text-color);\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .btn-secondary:hover {\n");
      out.write("            background-color: #252d33;\n");
      out.write("        }\n");
      out.write("    </style>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("    <div class=\"record-form\">\n");
      out.write("        <h2 class=\"form-title\">Add Medical Record</h2>\n");
      out.write("        <form action=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/AddMedicalRecordServlet\" method=\"post\">\n");
      out.write("            <input type=\"hidden\" name=\"appointmentId\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${param.appointmentId}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">\n");
      out.write("            <input type=\"hidden\" name=\"patientId\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${param.patientId}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">\n");
      out.write("            <input type=\"hidden\" name=\"doctorId\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${user.id}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">\n");
      out.write("            \n");
      out.write("            <div class=\"form-group\">\n");
      out.write("                <label for=\"diagnosis\">Diagnosis:</label>\n");
      out.write("                <textarea id=\"diagnosis\" name=\"diagnosis\" required></textarea>\n");
      out.write("            </div>\n");
      out.write("            \n");
      out.write("            <div class=\"form-group\">\n");
      out.write("                <label for=\"treatment\">Treatment:</label>\n");
      out.write("                <textarea id=\"treatment\" name=\"treatment\" required></textarea>\n");
      out.write("            </div>\n");
      out.write("            \n");
      out.write("            <div class=\"btn-group\">\n");
      out.write("                <button type=\"submit\" class=\"btn btn-primary\">Save Record</button>\n");
      out.write("                <a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/DashboardServlet\" class=\"btn btn-secondary\">Cancel</a>\n");
      out.write("            </div>\n");
      out.write("        </form>\n");
      out.write("    </div>\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
